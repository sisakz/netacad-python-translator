<problem chapter='4' section='6' slide='1' problem='9' title='Egymásba ágyazott tuple és szótár'>

<!--
Update history:
2020-08-18 Grzegorz (reviewed, re-formatted, PEP-8 compliance check)
2020-08-27 Grzegorz (fourth bullet point updated)
2020-09-14 Grzegorz (code updated)
-->

<code>
school_class = {}

while True:
    name = input("Enter the student's name: ")
    if name == '':
        break
    
    score = int(input("Enter the student's score (0-10): "))
    if score not in range(0, 11):
	    break
    
    if name in school_class:
        school_class[name] += (score,)
    else:
        school_class[name] = (score,)
        
for name in sorted(school_class.keys()):
    adding = 0
    counter = 0
    for score in school_class[name]:
        adding += score
        counter += 1
    print(name, ":", adding / counter)

</code>


<h1>Egymásba ágyazott tuple és szótár</h1>

<p>Készítettünk egy egyszerű példát, amely megmutatja, hogyan működhetnek együtt a tuple-k és a szótárak.</p>

<p>Képzeljük el a következő problémát:</p>

<ul>
<li>szükségünk van egy programra, amely kiértékeli a diákok átlagpontszámait;</li>
<li>a programnak meg kell kérdeznie a tanuló nevét, majd az egyéni pontszámát;</li>
<li>a neveket tetszőleges sorrendben lehet megadni;</li>
<li>egy üres név megadása befejezi az adatok bevitelét (1. megjegyzés: az üres pontszám megadása ValueError kivételt fog kiváltani, de emiatt most ne aggódjunk, látni fogjuk, hogyan kell kezelni az ilyen eseteket, amikor a Python Alapok 2 tanfolyamon a kivételekről beszélünk);</li>
<li>ezután az összes név listáját kell kiadni, a kiszámított átlagpontszámmal együtt.</li>
</ul>

<p>Vizsgáljuk meg a kódot a szerkesztőben! Így kell megoldani a fenti feladatot.</p>

<p>Most pedig elemezzük soronként:</p>

<ul>
<li><strong>1. sor</strong>: létrehoz egy üres szótárt a bemeneti adatokhoz, amely a tanuló nevét használja kulcsként, míg az összes kapcsolódó pontszámot egy tuple-ben tárolja (a tuple lehet egy szótár értéke, ez egyáltalán nem probléma);</li>
<li><strong>3. sor</strong>: belép egy "végtelen" ciklusba (ne aggódj, a megfelelő pillanatban meg fog szakadni);</li>
<li><strong>4. sor</strong>: itt beolvassa a tanuló nevét;</li>
<li><strong>5-6. sor</strong>: ha a név üres karakterlánc (<codel></codel>), elhagyja a ciklust;</li>
<li><strong>8. sor</strong>: megkérdezi a tanuló egyik pontszámát (egész szám a 0-10 tartományból);</li>
<li><b>9-10. sor</b>: ha a megadott pontszám nem a 0-10 közötti tartományba esik, elhagyja a ciklust;
<li><strong>12-13. sor</strong>: ha a tanuló neve már szerepel a szótárban, meghosszabbítja a kapcsolódó tuple-t az új pontszámmal (figyeljük meg a += operátort);</li>
<li><strong>14-15. sor</strong>: ha ez egy új diák (ismeretlen a szótárban), létrehoz egy új bejegyzést. Értéke egy egyelemű tuple, amely tartalmazza a megadott pontszámot;</li>
<li><strong>17. sor</strong>: végigmegy a tanulók rendezett nevén;</li>
<li><strong>18-19. sor</strong>: az átlag kiértékeléséhez szükséges adatok kezdőértékének megadása (összeg és számláló)</li>
<li><strong>20-22. sor</strong>: végigmegy a tuple-n, az összes pontszámot figyelembe véve frissíti az összeget és a számlálót;</li>
<li><strong>23. sor</strong>: kiszámolja és kiírja a tanuló nevét és átlagpontszámát.</li>
</ul>

<p>Ez egy, a programunkkal folytatott „beszélgetés” eredménye:</p>


<codep>Enter the student's name: Bob
Enter the student's score (0-10): 7
Enter the student's name: Andy
Enter the student's score (0-10): 3
Enter the student's name: Bob
Enter the student's score (0-10): 2
Enter the student's name: Andy
Enter the student's score (0-10): 10
Enter the student's name: Andy
Enter the student's score (0-10): 3
Enter the student's name: Bob
Enter the student's score (0-10): 9
Enter the student's name:
Andy : 5.333333333333333
Bob : 6.0</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>

<br>
<br>


<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
