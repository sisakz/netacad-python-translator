<problem chapter='4' section='2' slide='1' problem='8' title='SZAKASZ ÖSSZEFOGLALÁS'>

<!--
Update history:
2020-08-13 Grzegorz (reviewed, re-formatted)
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<h1>A legfontosabb tudnivalók</h1>



<p>1. A függvényeknek paraméterek segítségével adhatunk át információkat. A függvényeknek akármennyi paramétere lehet, ahány paraméterre csak szükségünk van.</p>

<p>Példa egy egyparaméteres függvényre:</p>

<codep class="syntax-color">def hi(name):
    print("Hi,", name)

hi("Greg")
</codep>
<br>

<p>Példa egy kétparaméteres függvényre:</p>

<codep class="syntax-color">def hi_all(name_1, name_2):
    print("Hi,", name_2)
    print("Hi,", name_1)

hi_all("Sebastian", "Konrad")
</codep>
<br>

<p>Példa egy háromparaméteres függvényre:</p>

<codep class="syntax-color">def address(street, city, postal_code):
    print("Your address is:", street, "St.,", city, postal_code)

s = input("Street: ")
p_c = input("Postal Code: ")
c = input("City: ")

address(s, c, p_c)
</codep>
<br>

<p>2. A következő technikákkal adhatunk át argumentumokat egy függvénynek:</p>

<ul>
<li><strong>pozicionális argumentumátadás</strong>, amelyben az átadott argumentumok sorrendje számít (1. példa);</li>
<li><strong>kulcsszavas (név szerinti) argumentumátadás</strong>, amelyben az átadott argumentumok sorrendje nem számít (2. példa);</li>
<li>pozicionális és kulcsszavas argumentumátadás keveréke (3. példa).</li>

</ul>

<codep class="syntax-color">Ex. 1
def subtra(a, b):
    print(a - b)

subtra(5, 2)    # outputs: 3
subtra(2, 5)    # outputs: -3


Ex. 2
def subtra(a, b):
    print(a - b)

subtra(a=5, b=2)    # outputs: 3
subtra(b=2, a=5)    # outputs: 3

Ex. 3
def subtra(a, b):
    print(a - b)

subtra(5, b=2)    # outputs: 3
subtra(5, 2)    # outputs: 3
</codep>
<br>

<p>Fontos megjegyezni, hogy a <strong>pozicionális argumentumok nem állhatnak a kulcsszavas argumentumok után</strong>.  Ezért, ha megpróbáljuk futtatni a következő kódrészletet:</p>

<codep style="color:red;">def subtra(a, b):
    print(a - b)

subtra(5, b=2)    # outputs: 3
subtra(<mark style="background-color:#e6f2ff;">a=5, 2</mark>)    # Syntax Error</codep>

<br>
<p>akkor a Python <codel>SyntaxError</codel> hibaüzenetet fog adni.</p>




<br>
<br>

</div>




<div class="small-12 large-6 columns">

<br>

<p>3. A kulcsszavas argumentumátadási technika használható egy adott argumentum <strong>előre definiált alapértékének</strong> a meghatározására:</p>

<codep class="syntax-color">def name(first_name, last_name="Smith"):
    print(first_name, last_name)

name("Andy")    # outputs: Andy Smith
name("Betty", "Johnson")    # outputs: Betty Johnson (the keyword argument replaced by "Johnson")
</codep>

<br>
<br>
<hr>
<br>


<p><strong>1. gyakorlat</strong></p>
<p>Mi a kimenete a következő kódrészletnek?</p>

<codep>def intro(a="James Bond", b="Bond"):
    print("My name is", b + ".", a + ".")

intro()

</codep>

<br>

<div align="right">

<button class="button tiny" onclick="solution('sol')">Ellenőrzés</button>

</div>

<p id="sol" style="display: none;">
<codep>My name is Bond. James Bond.</codep>
</p>

<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>

<br>



<p><strong>2. gyakorlat</strong></p>
<p>Mi a kimenete a következő kódrészletnek?</p>

<codep>def intro(a="James Bond", b="Bond"):
    print("My name is", b + ".", a + ".")

intro(b="Sean Connery")

</codep>

<br>

<div align="right">
<button class="button tiny" onclick="solution('sol2')">Ellenőrzés</button>
</div>

<p id="sol2" style="display: none;">
<codep>My name is Sean Connery. James Bond.</codep>
</p>


<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>

<br>




<p><strong>3. gyakorlat</strong></p>
<p>Mi a kimenete a következő kódrészletnek?</p>

<codep>def intro(a, b="Bond"):
    print("My name is", b + ".", a + ".")

intro("Susan")

</codep>

<br>

<div align="right">
<button class="button tiny" onclick="solution('sol3')">Ellenőrzés</button>
</div>

<p id="sol3" style="display: none;">
<codep>My name is Bond. Susan.</codep>
</p>

<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>






<br>

<p><strong>4. gyakorlat</strong></p>
<p>Mi a kimenete a következő kódrészletnek?</p>

<codep>def add_numbers(a, b=2, c):
    print(a + b + c)

add_numbers(a=1, c=3)

</codep>

<br>

<div align="right">
<button class="button tiny" onclick="solution('sol4')">Ellenőrzés</button>
</div>

<p id="sol4" style="display: none;">
<codel>SyntaxError</codel> - egy nem alapértelmezett argumentum (<codel>c</codel>) egy alapértelmezett argumentumot (<codel>b=2</codel>) követ.
</p>

<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>


<br>

</div>

</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>
