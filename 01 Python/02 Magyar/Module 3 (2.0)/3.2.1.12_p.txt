<problem chapter='3' section='2' slide='1' problem='12' title='Ciklusok | else'>

<!--
Update history:
2020-07-21 Grzegorz (reviewed, re-formatted)
-->

<code>i = 1
while i < 5:
    print(i)
    i += 1
else:
    print("else:", i)

</code>


<h1>A <font face="courier new">while</font> ciklus és az <font face="courier new">else</font> ág</h1>


<p>Mindkét ciklus, a <codel>while</codel> és a <codel>for</codel> is rendelkezik egy érdekes (és ritkán használt) tulajdonsággal.</p>

<p>Megmutatjuk, hogyan működik, aztán próbáld megítélni, hogy használható-e, hogy mennyire hasznos vagy nélkülözhető ez a funkció!</p>

<p>Más szóval, próbáld eldönteni, hogy a funkció tényleg értékes és hasznos-e, vagy csupán szintaktikai cukorka.</p>

<p>Nézd meg a szerkesztőben lévő részletet! Van valami furcsa a végén – az <codel>else</codel> kulcsszó.</p>

<p>Ahogyan azt már sejthetted, a <strong>ciklusoknak is lehet <codel>else</codel> ága, akárcsak az <codel>if</codel>-eknek</strong>.</p>

<p>A ciklus <codel>else</codel> ága <strong>mindig egyszer kerül végrehajtásra, függetlenül attól, hogy a ciklus belépett-e a törzsébe vagy sem</strong>.</p>

<p>Kitalálod a kimenetet? Futtasd le a programot, és ellenőrizd, hogy igazad volt-e!</p>


<p>Módosítsd egy kicsit a kódrészletet, hogy a ciklustörzs egyetlen egyszer tudjon lefutni:</p>

<codep class="syntax-color">i = 5
while i < 5:
    print(i)
    i += 1
else:
    print("else:", i)
</codep>

<br>


<p>Figyeld meg, hogy a <codel>while</codel> állapota az elején <codel>False</codel>.</p>

<p>Futtasd le és teszteld a programot, majd ellenőrizd, hogy az <codel>else</codel> ág végrehajtásra került-e vagy sem!</p>

<br>


<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
