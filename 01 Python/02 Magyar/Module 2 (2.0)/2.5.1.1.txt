<problem chapter='2' section='5' slide='1' problem='1' title='Megjegyzések a kódban'>

<!--
Update history:
2020-07-17 Grzegorz (reviewed; window size changed;syntax-color and blank line added; variable names changed)
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<h1>Megjegyzések a kódban: mikor, miért és hogyan?</h1>


<p>Sokszor érdemes megjegyzést írni a kódba, ami nem a Pythonnak, hanem a kód olvasójának szól. Általában azért használjuk, hogy elmagyarázzuk a kódban használt trükköket, a változók jelentését, és végül azért, hogy tárolt információ maradjon arról, hogy ki a szerző és mikor íródott a program.</p>

<p>A programba illesztett jegyzeteket, amit a rendszer <strong>futáskor figyelmen kívül hagy</strong>, <strong>megjegyzésnek vagy kommentnek</strong> nevezzük.</p>

<p>Hogyan lehet ilyen megjegyzést hagyni a forráskódban? Ezt úgy kell megtenni, hogy a Python ne értelmezze a kód részének.</p>


<p>Amikor a Python találkozik egy megjegyzéssel a programodban, a megjegyzés teljesen átlátszó a számára, az ő szempontjából csak egy szóköz (függetlenül attól, hogy milyen hosszú a valódi megjegyzés).</p>

<p>Pythonban a megjegyzés egy olyan szöveg, amely <codel>#</codel> (hash) jellel kezdődik és a sor végéig tart.</p>

<p>Ha több soron átívelő megjegyzést akarsz, akkor egy-egy hash-t kell az összes sor elé tenni.</p>

<p>Mint például itt::</p>

<codep class="syntax-color"># This program evaluates the hypotenuse c.
# a and b are the lengths of the legs.
a = 3.0
b = 4.0
c = (a ** 2 + b ** 2) ** 0.5  # We use ** instead of square root.
print("c =", c)
</codep>


<br>

<p>A gondos, tudatos fejlesztők <strong>minden fontos kódrészletet kommentelnek</strong>, például elmagyarázzák a változók szerepét. Fontos azonban megjegyezni, hogy a változókat a legjobb, ha egyértelműen nevezzük el.</p>

<br>

</div>




<div class="small-12 large-6 columns">

<br>




<p>Ha például egy adott változót arra tervezünk, hogy valamilyen négyzet területét tárolja, a <codel>square_area</codel> név nyilvánvalóan jobb lesz, mint az <codel>aunt_jane</codel>.</p>

<p>Azt mondjuk, hogy a legjobb azonosító <strong>önmagát dokumentálja</strong>.</p>

 
<p>A megjegyzések akkor is hasznosak, amikor <strong>egy kódrészletre valamilyen okból éppen nincs szükséged</strong>. Nézd meg az alábbi példát: ha a <strong>megjegyzés jelét törlöd</strong> a sor elejéről, megváltozik a kód kimenete:</p>

<codep># This is a test program.
x = 1
y = 2
<mark style="background-color:#e6f2ff;"># y = y + x</mark>
print(x + y)

</codep></p>

<br>

<p>Ezt gyakran a program tesztelése során alkalmazzák, hogy elkülönítsék azt a helyet, ahol a hiba rejtőzhet.</p>

<p><span class="label" style="background-color:orange;"><b>TIPP</b></span></p>

<p>Ha gyorsan szeretnél több sornyi kódot kommentelni vagy a kommentelést megszüntetni, jelöld ki a módosítani kívánt sorokat, és használd a <strong>CTRL</strong> + <strong>/</strong> (Windows) vagy <strong>CMD</strong> + <strong>/</strong> (Mac OS) billentyűkombinációt. Nagyon hasznos trükk, nem igaz? Próbáld ki <a href="https://edube.org/sandbox/ffa32cfe-a181-11e9-ade3-0242e71d5f55" target="_blank">ezt a kódot</a> a Sandboxban.</p>

<br>

</div>


</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>
