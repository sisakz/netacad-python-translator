<problem chapter='2' section='1' slide='1' problem='8' title='Az első programod'>

<!--
Update history:
2020-07-17 Grzegorz (text format and page number change, code format)
2020-08-25 Grzegorz (changing the opening paragraph)
-->

<code>
print("The itsy bitsy spider climbed up the waterspout.")
print("Down came the rain and washed the spider out.")

</code>

<h1>A <span style="font-family:courier new;">print()</span> függvény - utasítások</h1>


<p>Az előző részekben megnéztünk egy olyan számítógépes programot, amely egy függvényhívást tartalmaz. A függvényhívás a Python <strong>utasítások</strong> egyik lehetséges típusa.</p>

<p>Természetesen minden összetett program nagyon sok utasítást tartalmaz. A kérdés az: hogyan helyezhetünk egynél több utasítást a Python kódba?</p>

<p>A Python szintaxisa ezen a területen meglehetősen egyedi. A legtöbb programozási nyelvtől eltérően a Python megköveteli, hogy <strong>egy sorban nem lehet egynél több utasítás</strong>.</p>

<p>Egy sor lehet üres (azaz egyáltalán nem tartalmaz utasítást), de nem tartalmazhat két, három vagy több utasítást. Ez szigorúan tilos!</p>

<p>Megjegyzés: A Python egy kivételt tesz ez alól a szabály alól. Megengedi, hogy egy utasítás egynél több sorra terjedjen ki (ami hasznos lehet, ha a kód összetett szerkezeteket tartalmaz).</p>

<p>Bővítsük ki egy kicsit a kódot, amit a szerkesztőben láthatunk. Futtasd le, és figyeld meg, mit látsz a konzolon!</p>


<p>A Python-konzolodnak most már így kell kinéznie:</p>


<codep>The itsy bitsy spider climbed up the waterspout.
Down came the rain and washed the spider out.</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>


<p>Ez jó alkalom arra, hogy néhány dolgot észrevegyünk:</p>

<ul>
<li>A program <strong>kétszer hívja meg a <codel>print()</codel> függvényt</strong>, és a konzolon két külön sort látunk. Ez azt jelenti, hogy a <codel>print()</codel> minden egyes végrehajtáskor új sorban írja a kimenetet. Ezt a viselkedést megváltoztathatjuk, de ki is használhatjuk.</li>

<li>Minden egyes <codel>print()</codel> hívás más-más karakterláncot tartalmaz argumentumként, és a konzol tartalma ezt követi. Ez azt jelenti, hogy <strong>a kódban lévő utasítások ugyanabban a sorrendben kerülnek végrehajtásra</strong>, ahogyan a forrásfájlban elhelyezésre kerültek. A következő utasítás nem kerül végrehajtásra, amíg az előző nem fejeződött be (van néhány kivétel ez alól a szabály alól, de ezeket egyelőre figyelmen kívül hagyjuk).</li>
</ul>

<br>


<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
