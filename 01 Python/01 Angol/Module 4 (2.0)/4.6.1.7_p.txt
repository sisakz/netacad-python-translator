<problem chapter='4' section='6' slide='1' problem='7' title='Tuples and dictionaries âˆ’ methods'>

<!--
Update history:
2020-08-18 Grzegorz (reviewed, re-formatted, PEP-8 compliance check)
-->

<code>
dictionary = {"cat": "chat", "dog": "chien", "horse": "cheval"}

for english, french in dictionary.items():
    print(english, "->", french)

</code>


<h1>How to use a dictionary: The <font face="courier new">items()</font> and <font face="courier new">values()</font> methods</h1>

<p>Let's now have a look at a dictionary method called <codel>items()</codel>. The method <strong>returns tuples</strong> (this is the first example where tuples are something more than just an example of themselves) <strong>where each tuple is a key-value pair</strong>.</p>

<p>This is how it works:</p>

<codep>dictionary = {"cat": "chat", "dog": "chien", "horse": "cheval"}

for english, french in <mark style="background-color:#e6f2ff;">dictionary.items()</mark>:
    print(english, "-&gt;", french)

</codep>

<br>

<p>Note the way in which the tuple has been used as a <codel>for</codel> loop variable.</p>

<p>The example prints:</p>

<codep>cat -&gt; chat
dog -&gt; chien
horse -&gt; cheval</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>

<br>

<p>There is also a method called <codel>values()</codel>, which works similarly to <codel>keys()</codel>, but <strong>returns values</strong>.</p>

<p>Here is a simple example:</p>

<codep>dictionary = {"cat": "chat", "dog": "chien", "horse": "cheval"}

for french in <mark style="background-color:#e6f2ff;">dictionary.values()</mark>:
    print(french)

</codep>

<br>


<p>As the dictionary is not able to automatically find a key for a given value, the role of this method is rather limited.</p>

<p>Here is the expected output:</p>

<codep>cheval
chien
chat</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>

<br>


<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
