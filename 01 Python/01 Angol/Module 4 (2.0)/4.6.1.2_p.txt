<problem chapter='4' section='6' slide='1' problem='2' title='Tuples and dictionaries'>

<!--
Update history:
2020-08-18 Grzegorz (reviewed, re-formatted, PEP-8 compliance check)
-->

<code>my_tuple = (1, 10, 100, 1000)

print(my_tuple[0])
print(my_tuple[-1])
print(my_tuple[1:])
print(my_tuple[:-2])

for elem in my_tuple:
    print(elem)

</code>



<h1>How to use a tuple?</h1>


<p>If you want to get the elements of a tuple in order to read them over, you can use the same conventions to which you're accustomed while using lists.</p>

<p>Take a look at the code in the editor.</p>

<p>The program should produce the following output − run it and check:</p>

<codep>1
1000
(10, 100, 1000)
(1, 10)
1
10
100
1000</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>

<br>


<p>The similarities may be misleading − <strong>don't try to modify a tuple's contents</strong>! It's not a list!</p>

<p>All of these instructions (except the topmost one) will cause a runtime error:</p>

<codep style="color:red;"><font style="color:black;">my_tuple = (1, 10, 100, 1000)</font>

my_tuple.append(10000)
del my_tuple[0]
my_tuple[1] = -10

</codep>

<br>

<p>This is the message that Python will give you in the console window:</p>

<codep>AttributeError: 'tuple' object has no attribute 'append'</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>

<br>

<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
