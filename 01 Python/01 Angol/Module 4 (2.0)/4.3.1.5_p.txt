<problem chapter='4' section='3' slide='1' problem='5' title='Returning a result from a function'>

<!--
Update history:
2020-08-14 Grzegorz (reviewed, re-formatted)
-->

<code>
def strange_list_fun(n):
    strange_list = []
    
    for i in range(0, n):
        strange_list.insert(0, i)
    
    return strange_list

print(strange_list_fun(5))

</code>



<h1>Effects and results: lists and functions â€’ continued</h1>


<p>The second question is: <strong>may a list be a function result?</strong></p>

<p>Yes, of course! Any entity recognizable by Python can be a function result.</p>


<p>Look at the code in the editor. The program's output will look like this:</p>

<codep>[4, 3, 2, 1, 0]</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>

<br> 

<p>Now you can write functions with and without results.</p>


<p>Let's dive a little deeper into the issues connected with variables in functions. This is essential for creating effective and safe functions.</p>

<br>

<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
