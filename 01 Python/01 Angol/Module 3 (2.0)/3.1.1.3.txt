<problem chapter='3' section='1' slide='1' problem='3' title='Making decisions in Python'>

<!--
Update history:
2020-07-20 Grzegorz (reviewed)
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<h1>Comparison operators: greater than</h1>


<p>You can also ask a comparison question using the <codel>&gt;</codel> (greater than) operator.</p>

<p>If you want to know if there are more black sheep than white ones, you can write it as follows:</p>

<codep>black_sheep <mark style="background-color:#e6f2ff;">&gt;</mark> white_sheep  # Greater than

</codep>

<br>


<p><codel>True</codel> confirms it; <codel>False</codel> denies it.</p>


<br>



<h2>Comparison operators: greater than or equal to</h2>

<p>The <i>greater than</i> operator has another special, <strong>non-strict</strong> variant, but it's denoted differently than in classical arithmetic notation: <codel>>=</codel> (greater than or equal to).</p>

<p>There are two subsequent signs, not one.</p>

<p>Both of these operators (strict and non-strict), as well as the two others discussed in the next section, are <strong>binary operators with left-sided binding</strong>, and their <strong>priority is greater than that shown by <codel>==</codel> and <codel>!=</codel></strong>.</p>

<p>If we want to find out whether or not we have to wear a warm hat, we ask the following question:</p>

<codep>centigrade_outside <mark style="background-color:#e6f2ff;">&ge;</mark> 0.0  # Greater than or equal to

</codep>

<br>


<h2>Comparison operators: less than or equal to</h2>


<p>As you've probably already guessed, the operators used in this case are: the <codel><</codel> (less than) operator and its non-strict sibling: <codel><=</codel> (less than or equal to).</p>

<p>Look at this simple example:</p>

<codep>current_velocity_mph <mark style="background-color:#e6f2ff;">&lt;</mark> 85  # Less than
current_velocity_mph <mark style="background-color:#e6f2ff;">&le;</mark> 85  # Less than or equal to

</codep>

<br>

 
<p>We're going to check if there's a risk of being fined by the highway police (the first question is strict, the second isn't).</p>

<br>



</div>





<div class="small-12 large-6 columns">



<h2>Making use of the answers</h2>

<p>What can you do with the answer (i.e., the result of a comparison operation) you get from the computer?</p>

<p>There are at least two possibilities: first, you can memorize it (<strong>store it in a variable</strong>) and make use of it later. How do you do that? Well, you use an arbitrary variable like this:</p>

<codep><mark style="background-color:#e6f2ff;">answer</mark> = number_of_lions >= number_of_lionesses

</codep>

<br>

<p>The content of the variable will tell you the answer to the question asked.</p>

<br>

<p>The second possibility is more convenient and far more common: you can use the answer you get to <strong>make a decision about the future of the program</strong>.</p>

<p>You need a special instruction for this purpose, and we'll discuss it very soon.</p>

<p>Now we need to update our <strong>priority table</strong>, and put all the new operators into it. It now looks as follows:</p>

<table style="width:75%">

<tr>
<th>Priority</th>
<th>Operator</th>
<th></th>
</tr>

<tr>
<td>1</td>
<td><codel>+</codel>, <codel>-</codel></td>
<td>unary</td>
</tr>

<tr>
<td>2</td>
<td><codel>**</codel></td>
<td></td>
</tr>

<tr>
<td>3</td>
<td><codel>*</codel>, <codel>/</codel>, <codel>//</codel>, <codel>%</codel></td>
<td></td>
</tr>

<tr>
<td>4</td>
<td><codel>+</codel>, <codel>-</codel></td>
<td>binary</td>
</tr>

<tr>
<td>5</td>
<td><codel>&lt;</codel>, <codel>&lt;=</codel>, <codel>&gt;</codel>, <codel>&gt;=</codel></td>
<td></td>
</tr>

<tr>
<td>6</td>
<td><codel>==</codel>, <codel>!=</codel></td>
<td></td>
</tr>

</table>

<br>


</div>


</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>
