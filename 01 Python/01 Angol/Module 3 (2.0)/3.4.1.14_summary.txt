<problem chapter='3' section='4' slide='1' problem='14' title='SECTION SUMMARY'>

<!--
Update history:
2020-08-11 Grzegorz (reviewed), code formatting
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<h1>Key takeaways</h1>

<br>


<p>1. The <strong>list is a type of data</strong> in Python used to <strong>store multiple objects</strong>. It is an <strong>ordered and mutable collection</strong> of comma-separated items between square brackets, e.g.:</p>

<codep class="syntax-color">my_list = [1, None, True, "I am a string", 256, 0]
</codep>
<br>

<p>2. Lists can be <strong>indexed and updated</strong>, e.g.:</p>

<codep class="syntax-color">my_list = [1, None, True, 'I am a string', 256, 0]
print(my_list[3])  # outputs: I am a string
print(my_list[-1])  # outputs: 0

my_list[1] = '?'
print(my_list)  # outputs: [1, '?', True, 'I am a string', 256, 0]

my_list.insert(0, "first")
my_list.append("last")
print(my_list)  # outputs: ['first', 1, '?', True, 'I am a string', 256, 0, 'last']
</codep>
<br>

<p>3. Lists can be <strong>nested</strong>, e.g.:</p>

<codep class="syntax-color">my_list = [1, 'a', ["list", 64, [0, 1], False]]
</codep>
<br>

<p>You will learn more about nesting in module 3.7 ‒ for the time being, we just want you to be aware that something like this is possible, too.</p>

<p>4. List elements and lists can be <strong>deleted</strong>, e.g.:</p>

<codep class="syntax-color">my_list = [1, 2, 3, 4]
del my_list[2]
print(my_list)  # outputs: [1, 2, 4]

del my_list  # deletes the whole list
</codep>
<br>

<p>Again, you will learn more about this in module 3.6 ‒ don't worry. For the time being just try to experiment with the above code and check how changing it affects the output.</p>


<p>5. Lists can be <strong>iterated</strong> through using the <codel>for</codel> loop, e.g.:</p>


<codep class="syntax-color">my_list = ["white", "purple", "blue", "yellow", "green"]

for color in my_list:
    print(color)
</codep>
<br>

<p>6. The <codel>len()</codel> function may be used to <strong>check the list's length</strong>, e.g.:</p>

<codep class="syntax-color">my_list = ["white", "purple", "blue", "yellow", "green"]
print(len(my_list))  # outputs 5

del my_list[2]
print(len(my_list))  # outputs 4
</codep>
<br>

<p>7. A typical <strong>function</strong> invocation looks as follows: <codel>result = function(arg)</codel>, while a typical <strong>method</strong> invocation looks like this:<codel>result = data.method(arg)</codel>.</p>


<br>
<br>

</div>




<div class="small-12 large-6 columns">

<br>


<p><strong>Exercise 1</strong></p>
<p>What is the output of the following snippet?</p>

<codep>lst = [1, 2, 3, 4, 5]
lst.insert(1, 6)
del lst[0]
lst.append(1)

print(lst)

</codep>

<br>

<div align="right">
<button class="button tiny" onclick="solution('sol')">Check</button>
</div>

<p id="sol" style="display: none;">
<codep>[6, 2, 3, 4, 5, 1]</codep>
</p>

<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>





<p><strong>Exercise 2</strong></p>
<p>What is the output of the following snippet?</p>

<codep>lst = [1, 2, 3, 4, 5]
lst_2 = []
add = 0

for number in lst:
    add += number
    lst_2.append(add)

print(lst_2)

</codep>

<br>


<div align="right"><button class="button tiny" onclick="solution('sol2')">Check</button></div>

<p id="sol2" style="display: none;">
<codep>[1, 3, 6, 10, 15]</codep>
</p>


<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>





<p><strong>Exercise 3</strong></p>
<p>What happens when you run the following snippet?</p>

<codep>lst = []
del lst
print(lst)

</codep>

<br>

<div align="right"><button class="button tiny" onclick="solution('sol3')">Check</button></div>

<p id="sol3" style="display: none;">
<codep style="color:red;">NameError: name 'lst' is not defined</codep>
</p>

<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>




<p><strong>Exercise 4</strong></p>
<p>What is the output of the following snippet?</p>

<codep>lst = [1, [2, 3], 4]
print(lst[1])
print(len(lst))

</codep>

<br>

<div align="right"><button class="button tiny" onclick="solution('sol4')">Check</button></div>

<p id="sol4" style="display: none;">
<codep>[2, 3]
3</codep>
</p>

<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>

<br>

</div>

</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>
