<problem chapter='2' section='2' slide='1' problem='12' title='SECTION SUMMARY'>

<!--
Update history:
2020-07-17 Grzegorz (reformatted)
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<h1>Key takeaways</h1>


<p>1. <strong>Literals</strong> are notations for representing some fixed values in code. Python has various types of literals - for example, a literal can be a number (numeric literals, e.g., <codel>123</codel>), or a string (string literals, e.g., "I am a literal."). </p>

<p>2. The <strong>binary system</strong> is a system of numbers that employs <i>2</i> as the base. Therefore, a binary number is made up of 0s and 1s only, e.g., <codel>1010</codel> is <i>10</i> in decimal.</p> Octal and hexadecimal numeration systems, similarly, employ <i>8</i> and <i>16</i> as their bases respectively. The hexadecimal system uses the decimal numbers and six extra letters.</p>

<p>3. <strong>Integers</strong> (or simply <strong>int</strong>s) are one of the numerical types supported by Python. They are numbers written without a fractional component, e.g., <codel>256</codel>, or <codel>-1</codel> (negative integers).</p>

<p>4. <strong>Floating-point</strong> numbers (or simply <strong>float</strong>s) are another one of the numerical types supported by Python. They are numbers that contain (or are able to contain) a fractional component, e.g., <codel>1.27</codel>.

<p>5. To encode an apostrophe or a quote inside a string, you can either use the escape character, e.g., <codel>'I\'m happy.'</codel>, or open and close the string using an opposite set of symbols to the ones you wish to encode, e.g., <codel>"I'm happy."</codel> to encode an apostrophe, and <codel>'He said "Python", not "typhoon"'</codel> to encode a (double) quote.</p>

<p>6. <strong>Boolean values</strong> are the two constant objects <codel>True</codel> and <codel>False</codel> used to represent truth values (in numeric contexts <codel>1</codel> is <codel>True</codel>, while <codel>0</codel> is <codel>False</codel>.</p>

<p><span class="label" style="background-color:orange;"><b>EXTRA</b></span></p>

<p>There is one more, special literal that is used in Python: the <codel>None</codel> literal. This literal is a <codel>NoneType</codel> object, and it is used to represent <strong>the absence of a value</strong>. We'll tell you more about it soon.</p>


<br>

</div>



<div class="small-12 large-6 columns">


<br>

<p><strong>Exercise 1</strong></p>
<p>What types of literals are the following two examples?</p>

<codep>"Hello ", "007"</codep>

<br>

<button class="button tiny" onclick="solution('sol')">Check</button>

<p id="sol" style="display: none;">
They're both strings/string literals.
</p>


<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>

<br>



<p><strong>Exercise 2</strong></p>
<p>What types of literals are the following four examples?</p>

<codep>"1.5", 2.0, 528, False</codep>

<br>

<button class="button tiny" onclick="solution('sol2')">Check</button>

<p id="sol2" style="display: none;">
The first is a string, the second is a numerical literal (a float), the third is a numerical literal (an integer), and the fourth is a boolean literal.
</p>


<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>

<br>


<p><strong>Exercise 3</strong></p>
<p>What is the decimal value of the following binary number?</p>

<codep>1011</codep>

<br>

<button class="button tiny" onclick="solution('sol3')">Check</button>

<p id="sol3" style="display: none;">
It's <codel>11</codel>, because <font face="courier new">(2**0) + (2**1) + (2**3) = 11</font>
</p>


<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>


<br>



</div>


</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>
