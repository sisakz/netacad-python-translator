<problem chapter='2' section='5' slide='1' problem='1' title='A comment on comments'>

<!--
Update history:
2020-07-17 Grzegorz (reviewed; window size changed;syntax-color and blank line added; variable names changed)
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<h1>Leaving comments in code: why, how, and when</h1>


<p>You may want to put in a few words addressed not to Python but to humans, usually to explain to other readers of the code how the tricks used in the code work, or the meanings of the variables, and eventually, in order to keep stored information on who the author is and when the program was written.</p>

<p>A remark inserted into the program, which is <strong>omitted at runtime</strong>, is called a <strong>comment</strong>.</p>

<p>How do you leave this kind of comment in the source code? It has to be done in a way that won't force Python to interpret it as part of the code.</p>


<p>Whenever Python encounters a comment in your program, the comment is completely transparent to it ‒ from Python's point of view, this is only one space (regardless of how long the real comment is).</p>

<p>In Python, a comment is a piece of text that begins with a <codel>#</codel> (hash) sign and extends to the end of the line.</p>

<p>If you want a comment that spans several lines, you have to put a hash in front of them all.</p>

<p>Just like here:</p>

<codep class="syntax-color"># This program evaluates the hypotenuse c.
# a and b are the lengths of the legs.
a = 3.0
b = 4.0
c = (a ** 2 + b ** 2) ** 0.5  # We use ** instead of square root.
print("c =", c)
</codep>


<br>

<p>Good, responsible developers <strong>describe each important piece of code</strong>, e.g., explaining the role of the variables; although it must be stated that the best way of commenting variables is to name them in an unambiguous manner.</p>

<br>

</div>




<div class="small-12 large-6 columns">

<br>




<p>For example, if a particular variable is designed to store an area of some unique square, the name <codel>square_area</codel> will obviously be better than <codel>aunt_jane</codel>.</p>

<p>We say that the first name is <strong>self-commenting</strong>.</p>

 
<p>Comments may be useful in another respect ‒ you can use them to <strong>mark a piece of code that currently isn't needed</strong> for whatever reason. Look at the example below, if you <strong>uncomment</strong> the highlighted line, this will affect the output of the code:</p>

<codep># This is a test program.
x = 1
y = 2
<mark style="background-color:#e6f2ff;"># y = y + x</mark>
print(x + y)

</codep></p>

<br>

<p>This is often done during the testing of a program, in order to isolate the place where an error might be hidden.</p>

<p><span class="label" style="background-color:orange;"><b>TIP</b></span></p>

<p>If you'd like to quickly comment or uncomment multiple lines of code, select the line(s) you wish to modify and use the following keyboard shortcut: <strong>CTRL</strong> + <strong>/</strong> (Windows) or <strong>CMD</strong> + <strong>/</strong> (Mac OS). It's a very useful trick, isn't it? Try <a href="https://edube.org/sandbox/ffa32cfe-a181-11e9-ade3-0242e71d5f55" target="_blank">this code</a> in Sandbox.</p>

<br>

</div>


</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>
