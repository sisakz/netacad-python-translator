<problem chapter='1' section='1' slide='3' problem='3' title='There is more than one Python: Jython, PyPy, and RPython'>

<!--
Update history:
2020-08-24 Konrad (formatted)
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<br>

<h1>Jython</h1>

<p>Another version of Python is called <strong>Jython</strong>.</p>

<p>"J" is for "Java". Imagine a Python written in Java instead of C. This is useful, for example, if you develop large and complex systems written entirely in Java and want to add some Python flexibility to them. The traditional CPython may be difficult to integrate into such an environment, as C and Java live in completely different worlds and don't share many common ideas.</p>

<p>Jython can communicate with existing Java infrastructure more effectively. This is why some projects find it useful and necessary.</p>

<p>Note: the current Jython implementation follows Python 2 standards. There is no Jython conforming to Python 3, so far.</p>

<center><img src="/uploads/media/default/0001/01/da8dd2cf16c8acce7103da50df122d13c9fc787b.png" width="50%" alt="Jython logo" ></center>

<br>


</div>




<div class="small-12 large-6 columns">

<br>

<h1>PyPy and RPython</h1>

<p>Take a look at the logo below. It's a rebus. Can you solve it?</p>

<img src="/uploads/media/default/0001/01/1bf7a3808081ce1f05a7f7e8d24b024ea904218a.png" width="50%" alt="PyPy logo" style="float:left">

It's a logo of the <strong>PyPy</strong> - a Python within a Python. In other words, it represents a Python environment written in Python-like language named <strong>RPython</strong> (Restricted Python). It is actually a subset of Python.

<br><br>The source code of PyPy is not run in the interpretation manner, but is instead translated into the C programming language and then executed separately.

<div style="clear: both;"></div>
<br>

<p>This is useful because if you want to test any new feature that may be (but doesn't have to be) introduced into mainstream Python implementation, it's easier to check it with PyPy than with CPython. This is why PyPy is rather a tool for people developing Python than for the rest of the users.</p>

<p>This doesn't make PyPy any less important or less serious than CPython, of course.</p>

<p>In addition, PyPy is compatible with the Python 3 language.</p>

<p>There are many more different Pythons in the world. You'll find them if you look, but <strong>this course will focus on CPython</strong>.</p>

<br>


</div>


</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>
