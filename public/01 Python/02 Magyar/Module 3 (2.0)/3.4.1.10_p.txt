<problem chapter='3' section='4' slide='1' problem='10' title='Listák | Ciklusok'>

<!--
Update history:
2020-08-11 Grzegorz (reviewed), code formatting
-->

<code>
my_list = [10, 1, 8, 3, 5]
total = 0

for i in range(len(my_list)):
    total += my_list[i]

print(total)

</code>



<h1>Listák használata</h1>

<p>A <codel>for</codel> ciklusnak van egy nagyon speciális változata, amely nagyon hatékonyan képes <strong>listákat feldolgozni</strong>. Nézzük meg ezt!</p>

<p>Tegyük fel, hogy a <strong><codel>my_list</codel> listában tárolt értékek összegét szeretnénk kiszámítani</strong>.</p>

<p>Szükségünk van egy változóra, amelynek összege tárolásra kerül. Ennek értéke kezdetben <codel>0</codel>, a neve pedig <codel>total</codel> lesz. (Megjegyzés: Nem használjuk a <codel>sum</codel> elnevezést, mivel a Python ugyanezt a nevet használja az egyik beépített függvényéhez (<codel>sum()</codel>). <b>Az azonos név használata nem ajánlott</b>! Ezután a <codel>for</codel> ciklus segítségével hozzáadjuk a lista összes elemét. Nézd meg a szerkesztőben a kódrészletet!</p>

<p>Nézzük meg ezt a példát:</p>

<ul>
<li>a listához öt egész értékből álló sorozatot rendelünk;</li>

<li>az <codel>i</codel> változó a <codel>0</codel>, <codel>1</codel>, <codel>2</codel>, <codel>3</codel> és <codel>4</codel> értékeket veszi fel, majd indexeli a listát, kiválasztva az első, második, harmadik, negyedik és ötödik elemet;</li>

<li>minden egyes elemet a <codel>+=</codel> operátor hozzáadja a <codel>total</codel> változóhoz, így a ciklus végén megkapjuk a végeredményt;</li>

<li>figyeljük meg, hogy a <codel>len()</codel> függvényt milyen módon használtuk! Ez függetleníti a kódot a lista tartalmának esetleges változásaitól.</li>

</ul>

<br>

<h2>A <font face="courier new">for</font> ciklus másik arca</h2>

<p>A <codel>for</codel> ciklus sokkal többre képes. El tudja rejteni a lista indexeléséhez kapcsolódó összes műveletet és a lista összes elemét kézzelfogható módon adja át.</p>

<p>Ez a módosított részlet megmutatja, hogyan működik:</p>

<codep class="syntax-color copy line-numbers">my_list = [10, 1, 8, 3, 5]
total = 0

for i in my_list:
    total += i

print(total)
</codep>

<br>

<p>Mi történik itt?</p>

<ul>

<li>a <codel>for</codel> utasítás megadja a lista bejárására használt változót (itt <codel>i</codel>), amelyet az <codel>in</codel> kulcsszó és a feldolgozandó lista neve (itt <codel>my_list</codel>) követ;</li>

<li>az <codel>i</codel> változóhoz hozzárendeljük a lista összes későbbi elemének értékét, és a folyamat annyiszor fut le, ahány elem van a listában;</li>

<li>ez azt jelenti, hogy az <codel>i</codel> változót az elemek értékeinek másolataként használjuk és nem kell indexeket használnunk;</li>

<li>a <codel>len()</codel> függvényre itt sincs szükség.</li>

</ul>


<br>

<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
