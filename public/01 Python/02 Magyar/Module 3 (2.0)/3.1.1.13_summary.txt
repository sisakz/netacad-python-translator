<problem chapter='3' section='1' slide='1' problem='13' title='SZAKASZ ÖSSTEFOGLALÁS (1/2)'>

<!--
Update history:
2020-07-20 Grzegorz (reviewed)
2020-08-20 Konrad (fixed the first position in the table)
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<h1>A legfontosabb tudnivalók</h1>

<br>


<p>1. Az <strong>összehasonlító</strong> (vagy úgynevezett <i>relációs</i>) operátorok az értékek összehasonlítására szolgálnak. Az alábbi táblázat az összehasonlító operátorok működését szemlélteti, feltételezve, hogy <codel>x = 0</codel>, <codel>y = 1</codel>, és <codel>z = 0</codel>:</p>


<table style="width:100%">

<tr>
<th style="width:15%">Operátor</th>
<th style="width:40%">Leírás</th>
<th style="width:35%">Példa</th>
</tr>

<tr>
<td><code>==</code></td>
<td><code>True</code>, ha az operandusok értékei egyenlőek, ellenkező esetben <code>False</code></td>
<td><code class="codep syntax-color">x == y  # False
x == z  # True
</code></td>
</tr>

<tr>
<td><code>!=</code></td>
<td><code>True</code>, ha az operandusok értékei nem egyenlőek, ellenkező esetben <code>False</code></td>
<td><code class="codep syntax-color">x != y  # True
x != z  # False
</code></td>
</tr>

<tr>
<td><code>&gt;</code></td>
<td><code>True</code>, ha a bal oldali operandus értéke nagyobb, mint a jobb oldali operandus értéke, ellenkező esetben <code>False</code></td>
<td><code class="codep syntax-color">x > y  # False
y > z  # True
</code></td>
</tr>

<tr>
<td><code>&lt;</code></td>
<td><code>True</code>, ha a bal oldali operandus értéke kisebb, mint a jobb oldali operandus értéke, ellenkező esetben <code>False</code></td>
<td><code class="codep syntax-color">x < y  # True
y < z  # False
</code></td>
</tr>

<tr>
<td><code>&ge;</code></td>
<td><code>True</code>, ha a bal oldali operandus értéke nagyobb vagy egyenlő, mint a jobb oldali operandus értéke, ellenkező esetben <code>False</code></td>
<td><code class="codep syntax-color">x >= y  # False
x >= z  # True
y >= z  # True
</code></td>
</tr>

<tr>
<td><code>&le;</code></td>
<td><code>True</code>, ha a bal oldali operandus értéke kisebb vagy egyenlő, mint a jobb oldali operandus értéke, ellenkező esetben <code>False</code></td>
<td><code class="codep syntax-color">x <= y  # True
x <= z  # True
y <= z  # False
</code></td>
</tr>

</table>

<p>2. Ha egy kódot csak akkor szeretnénk végrehajtani, ha egy bizonyos feltétel teljesül, akkor használhatunk <strong>feltételes utasítást</strong>:</p>

<ul>
<li>egy <code>if</code> kifejezést, például:</li>
<br>
<code class="codep copy syntax-color">x = 10

if x == 10: # condition
    print("x is equal to 10")  # Executed if the condition is True.
</code>
<br>

<li><code>if</code> kifejezések sorozatát, például:</li>
<br>
<code class="codep copy syntax-color">x = 10

if x > 5: # condition one
    print("x is greater than 5")  # Executed if condition one is True.

if x < 10: # condition two
    print("x is less than 10")  # Executed if condition two is True.

if x == 10: # condition three
    print("x is equal to 10")  # Executed if condition three is True.
	</code>

<br>

<p>Minden <code>if</code> kifejezés külön-külön kerül kiértékelésre.</p>

</ul>

<br>
<br>

</div>




<div class="small-12 large-6 columns">

<br>


<ul>

<li>egy <code>if-else</code> kifejezést, például:</li>
<br>
<code class="codep copy syntax-color">x = 10

if x < 10:  # Condition
    print("x is less than 10")  # Executed if the condition is True.

else:
    print("x is greater than or equal to 10")  # Executed if the condition is False.
</code>
<br>

<li>egy sor <code>if</code> kifejezést, amit egy <code>else</code> követ, például:</li>
<br>

<code class="codep copy syntax-color">x = 10

if x > 5:  # True
    print("x > 5")

if x > 8:  # True
    print("x > 8")

if x > 10:  # False
    print("x > 10")

else:
    print("else will be executed")
</code>

<br>

<p>Minden <code>if</code> kifejezés külön-külön kerül kiértékelésre. Az <code>else</code> törzse akkor kerül végrehajtásra, ha az utolsó <code>if</code> értéke <code>False</code>.</p>

<li>az <code>if-elif-else</code> kifejezést, például:</li>

<br>
<code class="codep copy syntax-color">x = 10

if x == 10:  # True
    print("x == 10")

if x > 15:  # False
    print("x > 15")

elif x > 10:  # False
    print("x > 10")

elif x > 5:  # True
    print("x > 5")

else:
    print("else will not be executed")
</code>

<br>

<p>Ha az <code>if</code> feltétel <code>False</code>, a program ellenőrzi a következő <code>elif</code> blokkok feltételeit. Az első olyan <code>elif</code> blokkot hajtja végre, amelyik <code>True</code>. Ha minden feltétel <code>False</code>, akkor az <code>else</code> blokk kerül végrehajtásra.</p>

<li>beágyazott feltételes utasításokat, például:</li>

<br>
<code class="codep copy syntax-color">x = 10

if x > 5:  # True
    if x == 6:  # False
        print("nested: x == 6")
    elif x == 10:  # True
        print("nested: x == 10")
    else:
        print("nested: else")
else:
    print("else")
</code>
<br>

</ul>


<br>

</div>

</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>