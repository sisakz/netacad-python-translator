<problem chapter='3' section='4' slide='1' problem='14' title='SZAKASZ ÖSSZEFOGLALÁS'>

<!--
Update history:
2020-08-11 Grzegorz (reviewed), code formatting
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<h1>A legfontosabb tudnivalók</h1>

<br>


<p>1. A <strong>lista egy adattípus</strong> a Pythonban, amelyet <strong>több objektum tárolására</strong> használnak. Egy szögletes zárójelek között lévő, vesszővel elválasztott elemek <strong>rendezett és változtatható gyűjteménye</strong>, például:</p>

<codep class="syntax-color">my_list = [1, None, True, "I am a string", 256, 0]
</codep>
<br>

<p>2. A listák <strong>indexelhetők és aktualizálhatók</strong>, például:</p>

<codep class="syntax-color">my_list = [1, None, True, 'I am a string', 256, 0]
print(my_list[3])  # outputs: I am a string
print(my_list[-1])  # outputs: 0

my_list[1] = '?'
print(my_list)  # outputs: [1, '?', True, 'I am a string', 256, 0]

my_list.insert(0, "first")
my_list.append("last")
print(my_list)  # outputs: ['first', 1, '?', True, 'I am a string', 256, 0, 'last']
</codep>
<br>

<p>3. A listák <strong>egymásba ágyazhatók</strong>, például:</p>

<codep class="syntax-color">my_list = [1, 'a', ["list", 64, [0, 1], False]]
</codep>
<br>

<p>A 3.1.7. modulban többet fogsz megtudni a beágyazásról. Egyelőre csak azt szeretnénk, ha tudnád, hogy valami ilyesmi is lehetséges.</p>

<p>4. A listaelemek és listák <strong>törölhetők</strong>, például:</p>

<codep class="syntax-color">my_list = [1, 2, 3, 4]
del my_list[2]
print(my_list)  # outputs: [1, 2, 4]

del my_list  # deletes the whole list
</codep>
<br>

<p>Erről a 3.1.6. modulban fogsz többet megtudni. Egyelőre csak próbálj meg kísérletezni a fenti kóddal, és ellenőrizd, hogy a változtatás milyen hatással van a kimenetre!</p>


<p>5. A listák a <codel>for</codel> ciklus segítségével <strong>iterálhatók</strong> (bejárhatók), például:</p>


<codep class="syntax-color">my_list = ["white", "purple", "blue", "yellow", "green"]

for color in my_list:
    print(color)
</codep>
<br>

<p>6. A <codel>len()</codel> függvény használható a <strong>lista hosszának meghatározására</strong>, például:</p>

<codep class="syntax-color">my_list = ["white", "purple", "blue", "yellow", "green"]
print(len(my_list))  # outputs 5

del my_list[2]
print(len(my_list))  # outputs 4
</codep>
<br>

<p>7. Egy tipikus <strong>függvényhívás</strong> a következőképpen néz ki: <codel>result = function(arg)</codel>, míg egy tipikus <strong>tagfüggvényhívás</strong> így néz ki: <codel>result = data.method(arg)</codel>.</p>


<br>
<br>

</div>




<div class="small-12 large-6 columns">

<br>


<p><strong>1. gyakorlat</strong></p>
<p>Mi a kimenete a következő kódrészletnek?</p>

<codep>lst = [1, 2, 3, 4, 5]
lst.insert(1, 6)
del lst[0]
lst.append(1)

print(lst)

</codep>

<br>

<div align="right">
<button class="button tiny" onclick="solution('sol')">Ellenőrzés</button>
</div>

<p id="sol" style="display: none;">
<codep>[6, 2, 3, 4, 5, 1]</codep>
</p>

<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>





<p><strong>2. gyakorlat</strong></p>
<p>Mi a kimenete a következő kódrészletnek?</p>

<codep>lst = [1, 2, 3, 4, 5]
lst_2 = []
add = 0

for number in lst:
    add += number
    lst_2.append(add)

print(lst_2)

</codep>

<br>


<div align="right"><button class="button tiny" onclick="solution('sol2')">Ellenőrzés</button></div>

<p id="sol2" style="display: none;">
<codep>[1, 3, 6, 10, 15]</codep>
</p>


<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>





<p><strong>3. gyakorlat</strong></p>
<p>Mi történik, ha lefuttatjuk a következő kódrészletet?</p>

<codep>lst = []
del lst
print(lst)

</codep>

<br>

<div align="right"><button class="button tiny" onclick="solution('sol3')">Ellenőrzés</button></div>

<p id="sol3" style="display: none;">
<codep style="color:red;">NameError: name 'lst' is not defined</codep>
</p>

<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>




<p><strong>4. gyakorlat</strong></p>
<p>Mi a kimenete a következő kódrészletnek?</p>

<codep>lst = [1, [2, 3], 4]
print(lst[1])
print(len(lst))

</codep>

<br>

<div align="right"><button class="button tiny" onclick="solution('sol4')">Ellenőrzés</button></div>

<p id="sol4" style="display: none;">
<codep>[2, 3]
3</codep>
</p>

<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>

<br>

</div>

</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>
