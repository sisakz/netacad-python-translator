<problem chapter='4' section='6' slide='1' problem='8' title='A tuple és szótár adattípus'>

<!--
Update history:
2020-08-18 Grzegorz (reviewed, re-formatted, PEP-8 compliance check)
-->

<code>
dictionary = {"cat": "chat", "dog": "chien", "horse": "cheval"}

dictionary['cat'] = 'minou'
print(dictionary)

</code>


<h1>Hogyan használjuk a szótárt: értékek módosítása és hozzáadása</h1>

<p>Egy meglévő kulcshoz új értéket rendelni egyszerű. Mivel a szótár <strong>módosítható</strong>, nincs akadálya a módosításnak.</p>

<p>A <codel>"chat"</codel> értéket a <codel>"minou"</codel>-ra cseréljük, ami nem túl pontos, de a példánkban jól fog működni.</p>

<p>Lássuk:</p>

<codep>dictionary = {"cat": "chat", "dog": "chien", "horse": "cheval"}

<mark style="background-color:#e6f2ff;">dictionary['cat'] = 'minou'</mark>
print(dictionary)

</codep>

<br>

<p>A kimenet:</p>

<codep>{'cat': 'minou', 'dog': 'chien', 'horse': 'cheval'}</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>

<br>

<h2>Új kulcs hozzáadása</h2>

<p>Egy új kulcs-érték pár hozzáadása egy szótárhoz ugyanolyan egyszerű, mint egy érték megváltoztatása - csak egy új, <strong>korábban nem létező kulcshoz</strong> kell értéket rendelni.</p>

<p>Megjegyzés: ez nagyon eltérő viselkedés a listákhoz képest, amelyek nem engedik meg, hogy nem létező indexekhez értéket rendeljünk.</p>

<p>Vegyünk fel egy új szópárt a szótárba:</p>

<codep>dictionary = {"cat": "chat", "dog": "chien", "horse": "cheval"}

<mark style="background-color:#e6f2ff;">dictionary['swan'] = 'cygne'</mark>
print(dictionary)

</codep>

<br>

<p>A példa eredménye:</p>

<codep>{'cat': 'chat', 'dog': 'chien', 'horse': 'cheval', 'swan': 'cygne'}</codep>
<p style="text-align: right;"><font size="-2"><b>kimenet</b></font></p>
<br>

<p><span class="label" style="background-color:orange;"><b>EXTRA</b></span></p>

<p>Az <codel>update()</codel> tagfüggvény használatával is beilleszthetünk egy elemet egy szótárba, pl.:</p>

<codep>dictionary = {"cat": "chat", "dog": "chien", "horse": "cheval"}

<mark style="background-color:#e6f2ff;">dictionary.update({"duck": "canard"})</mark>
print(dictionary)

</codep>
<br>


<h2>Kulcs eltávolítása</h2>

<p>Kitalálod, hogy lehet eltávolítani egy kulcsot egy szótárból?</p>

<p>Megjegyzés: egy kulcs eltávolítása mindig a <strong>hozzá tartozó érték eltávolítását</strong> is eredményezi. <strong>Az értékek nem létezhetnek kulcsok nélkül</strong>.</p>

<p>Ez a <codel>del</codel> utasítással történik.</p>

<p>Íme a példa:</p>

<codep>dictionary = {"cat": "chat", "dog": "chien", "horse": "cheval"}

<mark style="background-color:#e6f2ff;">del dictionary['dog']</mark>
print(dictionary)

</codep>

<br>

<p>Megjegyzés: <strong>a nem létező kulcs eltávolítása hibát okoz</strong>.</p>

<p>A fenti példa kimenete:</p>

<codep>{'cat': 'chat', 'horse': 'cheval'}</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>
<br>

<p><span class="label" style="background-color:orange;"><b>EXTRA</b></span></p>

<p>A szótár utolsó elemének eltávolításához használhatjuk a <codel>popitem()</codel> metódust:</p>

<codep>dictionary = {"cat": "chat", "dog": "chien", "horse": "cheval"}

<mark style="background-color:#e6f2ff;">dictionary.popitem()</mark>
print(dictionary)    # outputs: {'cat': 'chat', 'dog': 'chien'}

</codep>
<br>

<p>A Python régebbi, azaz 3.6.7 előtti verzióiban a <codel>popitem()</codel> tagfüggvény egy véletlenszerű elemet távolít el egy szótárból.</p>

<br>
<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
