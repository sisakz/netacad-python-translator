<problem chapter='4' section='3' slide='1' problem='9' title='LAB: Prímszámok'>

<!--
Update history:
2020-08-14 Grzegorz (reviewed, re-formatted)
-->

<code>

def is_prime(num):
#
# Write your code here.
#

for i in range(1, 20):
	if is_prime(i + 1):
			print(i + 1, end=" ")
print()

</code>

<span class="label" style="background-color:rgb(205, 168, 105);"><strong>LABORGYAKORLAT</strong></span>

<br><br>

<h2>Becsült idő</h2>
<p>15-20 perc</p>

<h2>Nehézségi szint</h2>
<p>Közepes</p>


<h2>Célok</h2>

<ul>
<li>a tanuló klasszikus fogalmakkal és algoritmusokkal való megismertetés;</li>
<li>a tanuló függvények definiálásában és használatában való jártasságának fejlesztése.</li>
</ul>


<h2>Feladatleírás</h2>

<p><i>Egy természetes szám <b>prímszám</b>, ha nagyobb, mint 1, és nincs más osztója, mint 1 és önmaga.</i></p>

<p>Bonyolult? Egyáltalán nem. Például a 8 nem prímszám, mivel osztható 2-vel és 4-gyel (nem használhatjuk az 1 és a 8 osztókat, mivel a definíció ezt tiltja).</p>

<p>Ellenben a 7 prímszám, mivel nem találunk hozzá valódi osztót.</p>

<br>

<p>Feladatod egy olyan függvény írása, amely ellenőrzi, hogy egy szám prím vagy sem.</p>

<p>A függvény:</p>
<ul>
<li>neve  <codel>is_prime</codel>;</li>
<li>egy argumentumot vár (az ellenőrizendő értéket);</li>
<li><codel>True</codel> értéket ad vissza, ha az argumentum prímszám, és <codel>False</codel>-t ha nem.</li>
</ul>

<p>Tipp: próbáld meg osztani a paramétert az összes további számmal (2-vel kezdve), és ellenőrizd a maradékot - ha az nulla, akkor a számod nem lehet prímszám. Gondold át, mikor kell megállítani a folyamatot!</p>

<p>Ha bármilyen szám négyzetgyökére vagy kiváncsi, akkor használd a <codel>**</codel> operátort. Ne feledd: <font face="courier new">x</font> négyzetgyöke megegyezik <font face="courier new">x<sup>0.5</sup></font> értékével.</p>

<p>Egészítsd ki a kódot a szerkesztőprogramban!</p>

<p>Futtasd a kódod, és ellenőrizd, hogy annak kimenete megegyezik-e a miénkkel!</p>


<h2>Várható kimenet</h2>


<p><codep>2 3 5 7 11 13 17 19</codep></p>

<br>

<studyMode>false</studyMode>
<labMode>true</labMode>


<hint>
def is_prime(num):
    # the for loop
        # the if statement
            return False
    return True

for i in range(1, 20):
    if is_prime(i + 1):
        print(i + 1, end=" ")
print()

</hint>


<sampleSolution>
def is_prime(num):
    for i in range(2, int(1 + num ** 0.5)):
        if num % i == 0:
            return False
    return True

for i in range(1, 20):
    if is_prime(i + 1):
        print(i + 1, end=" ")
print()

</sampleSolution>

</problem>
