<problem chapter='4' section='1' slide='1' problem='4' title='Writing functions'>

<!--
Update history:
2020-08-13 Grzegorz (reviewed, re-formatted)
-->

<code>
def my_function():
    # function body

</code>



<h1>Your first function</h1>


<p>How do you make such a function?</p>

<p>You need to <strong>define</strong> it. The word <i>define</i> is significant here.</p>


<p>This is what the simplest function definition looks like:</p>

<codep><mark style="background-color:#e6f2ff;">def function_name():</mark>
    function_body

</codep>

<br>

<ul>
<li>It always starts with the <strong>keyword <codel>def</codel></strong> (for <i>define</i>)</li>
<li>next after <codel>def</codel> goes the <strong>name of the function</strong> (the rules for naming functions are exactly the same as for naming variables)</li>
<li>after the function name, there's a place for a pair of <strong>parentheses</strong> (they contain nothing here, but that will change soon)</li>
<li>the line has to be ended with a <strong>colon</strong>;</li>
<li>the line directly after <codel>def</codel> begins the <strong>function body</strong> ‒ a couple (at least one) of necessarily <strong>nested instructions</strong>, which will be executed every time the function is invoked; note: the <strong>function ends where the nesting ends</strong>, so you have to be careful.</li>
</ul>


<br>

<p>We're ready to define our <strong>prompting</strong> function. We'll name it <codel>message</codel> ‒ here it is:</p>

<codep class="syntax-color">def message():
    print("Enter a value: ")
</codep>

<br>

<p>The function is extremely simple, but fully <strong>usable</strong>. We've named it <codel>message</codel>, but you can label it according to your taste. Let's use it.</p>

<br>

<p>Our code contains the function definition now:</p>

<codep class="syntax-color">def message():
    print("Enter a value: ")

print("We start here.")
print("We end here.")
</codep>

<br>


<p>Note: we don't use the function at all ‒ there's no <strong>invocation</strong> of it inside the code.</p>

<p>When you run it, you see the following output:</p>

<codep>We start here.
We end here.</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>

<br>

<p>This means that Python reads the function's definitions and remembers them, but won't launch any of them without your permission.</p>

<hr>


<p>We've modified the code now ‒ we've inserted the <strong>function's invocation</strong> between the start and end messages:</p>

<codep>def message():
    print("Enter a value: ")

print("We start here.")
<mark style="background-color:#e6f2ff;">message()</mark>
print("We end here.")

</codep>

<br>

<p>The output looks different now:</p>

<codep>We start here.
Enter a value: 
We end here.</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>

<br>

<p>Test the code, modify it, experiment with it.</p>

<br>

<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
