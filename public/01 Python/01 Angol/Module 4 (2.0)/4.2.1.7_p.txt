<problem chapter='4' section='2' slide='1' problem='7' title='How functions communicate with their environment'>

<!--
Update history:
2020-08-13 Grzegorz (reviewed, re-formatted)
-->

<code>
def introduction(first_name, last_name="Smith"):
    print("Hello, my name is", first_name, last_name)

# Call the function here.

</code>



<h1>Parametrized functions ‒ more details</h1>

<p>It happens at times that a particular parameter's values are in use more often than others. Such arguments may have their <strong>default (predefined) values</strong> taken into consideration when their corresponding arguments have been omitted.<p>

<p>They say that the most popular English last name is <i>Smith</i>. Let's try to take this into account.</p>

<p>The default parameter's value is set using clear and pictorial syntax:</p>

<codep>def introduction(first_name, <mark style="background-color:#e6f2ff;">last_name="Smith"</mark>):
    print("Hello, my name is", first_name, last_name)

</codep>

<br>

<p>You only have to extend the parameter's name with the <codel>=</codel> sign, followed by the default value.</p>

<p>Let's invoke the function as usual:</p>

<codep class="syntax-color">introduction("James", "Doe")
</codep>
<br>

<p>Can you guess the output of the program? Run it and check if you're right.</p>


<p>And? Everything looks the same, but when you invoke the function in a way that looks a bit suspicious at first sight, like this:</p>

<codep class="syntax-color">introduction("Henry")
</codep>

<br>

<p>or this:</p>

<codep class="syntax-color">introduction(first_name="William")
</codep>
<br>

<p>there will be no error, and both invocations will succeed, while the console will show the following output:</p>

<codep>Hello, my name is Henry Smith
Hello, my name is William Smith</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>


<br>

<p>Test it.</p>

<hr>

<p>You can go further if it's useful. Both parameters have their default values now, look at the code below:</p>

<codep class="syntax-color">def introduction(first_name="John", last_name="Smith"):
    print("Hello, my name is", first_name, last_name)
</codep>

<br>


<p>This makes the following invocation absolutely valid:</p>

<codep class="syntax-color">introduction()
</codep>
<br>

<p>And this is the expected output:</p>

<codep>Hello, my name is John Smith</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>
<br>

<hr>

<p>If you use one keyword argument, the remaining one will take the default value:</p>

<codep class="syntax-color">introduction(last_name="Hopkins")
</codep>
<br>

<p>The output is:</p>

<codep>Hello, my name is John Hopkins</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>
<br>

<p>Test it.</p>

<br>

<p>Congratulations ‒ you have just learned some basic techniques for communicating with functions.</p>

<br>


<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
