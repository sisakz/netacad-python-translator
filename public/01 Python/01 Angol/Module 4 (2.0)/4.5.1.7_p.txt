<problem chapter='4' section='5' slide='1' problem='7' title='Creating functions âˆ’ Fibonacci numbers'>

<!--
Update history:
2020-08-18 Grzegorz (reviewed, re-formatted, PEP-8 compliance check)
-->

<code>

</code>



<h1>Some simple functions: Fibonacci numbers</h1>

<p>Are you familiar with <strong>Fibonacci</strong> numbers?</p>

<p>They are a <strong>sequence of integer numbers</strong> built using a very simple rule:</p>

<ul>
<li>the first element of the sequence is equal to one (<strong>Fib<sub>1</sub> = 1</strong>)</li>
<li>the second is also equal to one (<strong>Fib<sub>2</sub> = 1</strong>)</li>
<li>every subsequent number is the the_sum of the two preceding numbers:<br>(<strong>Fib<sub>i</sub> = Fib<sub>i-1</sub> + Fib<sub>i-2</sub></strong>)</li>
</ul>

<p>Here are some of the first Fibonacci numbers:</p>

<p style="font-family:courier new;">fib_1 = 1<br>
fib_2 = 1<br>
fib_3 = 1 + 1 = 2<br>
fib_4 = 1 + 2 = 3<br>
fib_5 = 2 + 3 = 5<br>
fib_6 = 3 + 5 = 8<br>
fib_7 = 5 + 8 = 13</p>


<p>What do you think about <strong>implementing this as a function</strong>?</p>

<p>Let's create our <codel>fib</codel> function and test it. Here it is:</p>

<codep class="syntax-color copy">def fib(n):
    if n < 1:
        return None
    if n < 3:
        return 1

    elem_1 = elem_2 = 1
    the_sum = 0
    for i in range(3, n + 1):
        the_sum = elem_1 + elem_2
        elem_1, elem_2 = elem_2, the_sum
    return the_sum


for n in range(1, 10):  # testing
    print(n, "->", fib(n))
</codep>

<br>


<p>Analyze the <codel>for</codel> loop body carefully, and find out how we <strong>move the <codel>elem_1</codel> and <codel>elem_2</codel> variables through the subsequent Fibonacci numbers</strong>.</p>

<p>The test part of the code produces the following output:</p>

<codep>1 -> 1
2 -> 1
3 -> 2
4 -> 3
5 -> 5
6 -> 8
7 -> 13
8 -> 21
9 -> 34</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>

<br>

<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
