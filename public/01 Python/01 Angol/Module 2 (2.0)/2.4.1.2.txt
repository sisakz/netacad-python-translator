<problem chapter='2' section='4' slide='1' problem='2' title='Variables ‒ data-shaped boxes'>

<!--
Update history:
2020-07-17 Grzegorz (re-formatted)
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<h1>Correct and incorrect variable names</h1>


<p>Note that the same restrictions apply to function names.</p>

<p>Python does not impose restrictions on the length of variable names, but that doesn't mean that a long variable name is always better than a short one.</p>

<p>Here are some correct, but not always convenient variable names:<p>

<p><codel>MyVariable</codel>, <codel>i</codel>, <codel>t34</codel>, <codel>Exchange_Rate</codel>, <codel>counter</codel>, <codel>days_to_christmas</codel>, <codel>TheNameIsSoLongThatYouWillMakeMistakesWithIt</codel>, <codel>_</codel>.</p>

<br>

<p>Moreover, Python lets you use not only Latin letters but also characters specific to languages that use other alphabets.</p>

<p>These variable names are also correct:</p>

<p><codel>Adi&#xF3;s_Se&#xF1;ora</codel>, <codel>s&#xFB;r_la_mer</codel>, <codel>Einbahnstra&#xDF;e</codel>, <codel>&#x43F;&#x435;&#x440;&#x435;&#x43C;&#x435;&#x43D;&#x43D;&#x430;&#x44F;</codel>.</p>


<p>And now for some <strong>incorrect names</strong>:</p>

<p><codel style="color:red;">10t</codel> (does not begin with a letter), <codel style="color:red;">Exchange Rate</codel> (contains a space)</p>

<br>

<p><span class="label" style="background-color:orange"><b>NOTE</b></span></p>

<p>The <a href="https://www.python.org/dev/peps/pep-0008/" target="_blank">PEP 8 -- Style Guide for Python Code</a> recommends the following naming convention for variables and functions in Python:</p>

<ul>
<li>variable names should be lowercase, with words separated by underscores to improve readability (e.g., <codel>var</codel>, <codel>my_variable</codel>)</li>
<li>function names follow the same convention as variable names (e.g., <codel>fun</codel>, <codel>my_function</codel>)</li>
<li>it's also possible to use mixed case (e.g., <codel>myVariable</codel>), but only in contexts where that's already the prevailing style, to retain backward compatibility with the adopted convention.</li>
</ul>

<br>

</div>




<div class="small-12 large-6 columns">

<h1>Keywords</h1>


<p>Take a look at the list of words that play a very special role in every Python program.</p>

<codep>['False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']</codep>

<br>

<p>They are called <strong>keywords</strong> or (more precisely) <strong>reserved keywords</strong>. They are reserved because <strong>you mustn't use them as names</strong>: neither for your variables, nor functions, nor any other named entities you want to create.</p>

<p>The meaning of the reserved word is <strong>predefined</strong>, and mustn't be changed in any way.</p>

<p>Fortunately, due to the fact that Python is case-sensitive, you can modify any of these words by changing the case of any letter, thus creating a new word, which is not reserved anymore.
</p>

<p>For example ‒ <strong>you can't name</strong> your variable like this:</p>

<p style="background-color:white;"><font face="Courier New" color="red">
import
</font></p>

<p>You mustn't have a variable named in such a way ‒ it is prohibited. But you can do this instead:</p>

<p style="background-color:white;"><font face="Courier New" color="green">
Import
</font></p>
 

<p>These words might be a mystery to you now, but you'll soon learn the meaning of them.</p>


<br>

</div>


</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>
