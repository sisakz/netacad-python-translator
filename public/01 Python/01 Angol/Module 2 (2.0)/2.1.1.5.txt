<problem chapter='2' section='1' slide='1' problem='5' title='Your very first program'>

<!--
Update history:
2020-07-17 Grzegorz (format and page number change)
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<h1>The <span style="font-family:courier new;">print()</span> function</h1>

<p>The function name (<strong><i>print</i></strong> in this case) along with the parentheses and argument(s), forms the <strong>function invocation</strong>.</p>

<p>We'll discuss this in more depth soon, but let's just shed a little light on it right now.</p>

<codep class="syntax-color">print("Hello, World!")
</codep>
<br>
<br>

<p>What happens when Python encounters an invocation like this one below?</p>


<codep>function_name(argument)

</codep>

<br>
<br>


</div>




<div class="small-12 large-6 columns">

<br>

<p>Let's see:</p>

<ul>

<li>First, Python checks if the name specified is <strong>legal</strong> (it browses its internal data in order to find an existing function of the name; if this search fails, Python aborts the code)</li>

<li>second, Python checks if the function's requirements for the number of arguments <strong>allows you to invoke</strong> the function in this way (e.g., if a specific function demands exactly two arguments, any invocation delivering only one argument will be considered erroneous, and will abort the code's execution)</li>

<li>third, Python <strong>leaves your code for a moment</strong> and jumps into the function you want to invoke; of course, it takes your argument(s) too and passes it/them to the function;</li>

<li>fourth, the function <strong>executes its code</strong>, causes the desired effect (if any), evaluates the desired result(s) (if any) and finishes its task;</li>

<li>finally, Python <strong>returns to your code</strong> (to the place just after the invocation) and resumes its execution.</li>

</ul>

</div>


</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>
