<problem chapter='2' section='2' slide='1' problem='14' title='The nature of strings in Python'>

<!--
Update history:
2020-09-22 Grzegorz (review, PEP-8 compliance check, update)
-->

<code>
# Demonstrating the list() function:
print(list("abcabc"))

# Demonstrating the count() method:
print("abcabc".count("b"))
print('abcabc'.count("d"))

</code>



<h1>Operations on strings: the <font face="Courier New">list()</font> function</h1>

<p>The <codel>list()</codel> function <strong>takes its argument (a string) and creates a new list containing all the string's characters, one per list element</strong>.</p>

<p>Note: it's not strictly a string function - <codel>list()</codel> is able to create a new list from many other entities (e.g., from tuples and dictionaries).</p>

<p>Take a look at the code example in the editor.</p>

<p>The example outputs:</p>

<codep>['a', 'b', 'c', 'a', 'b', 'c']</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>


<h2>Operations on strings: the <font face="Courier New">count()</font> method</h2>

<p>The <codel>count()</codel> method <strong>counts all occurrences of the element inside the sequence</strong>. The absence of such elements doesn't cause any problems.</p>

<p>Look at the second example in the editor. Can you guess its output?</p>

<p>It is:</p>

<codep>2
0</codep>
<p style="text-align: right;"><font size="-2"><b>output</b></font></p>


 
<p>Moreover, Python strings have a significant number of methods intended exclusively for processing characters. Don't expect them to work with any other collections. The complete list is presented here: <a href="https://docs.python.org/3.4/library/stdtypes.html#string-methods" target="_blank">https://docs.python.org/3.4/library/stdtypes.html#string-methods</a>.</p>

<p>We're going to show you the ones we consider the most useful.</p>


<br>
<br>

<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>