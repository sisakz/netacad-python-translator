<problem chapter='3' section='6' slide='1' problem='9' title='SECTION SUMMARY'>

<!--
Update history:
2020-09-08 SLawek (first version)
-->

<div class="container">
<div class="row">

<div class="small-12 large-6 columns">

<h1>Key takeaways</h1>

<br>


<p>1. The <codel>else:</codel> branch of the <codel>try</codel> statement is executed when there has been no exception during the execution of the <codel>try:</codel> block.</p>
<br>

<p>2. The <codel>finally:</codel> branch of the <codel>try</codel> statement is <b>always</b> executed.</p> 
<br>

<p>3. The syntax <codel>except <i>Exception_Name</i> as an <i>exception_object</i>:</codel> lets you intercept an object carrying information about a pending exception. The object's property named <codel>args</codel> (a tuple) stores all arguments passed to the object's constructor.</p>
<br>

<p>4. The exception classes can be extended to enrich them with new capabilities, or to adopt their traits to newly defined exceptions.</p>

<p>For example:</p>
<codep class="syntax-color copy">try:
    assert __name__ == "__main__"
except:
    print("fail", end=' ')
else:
    print("success", end=' ')
finally:
    print("done")
</codep>
<br>
<p>The code outputs: <codel>success done</codel>.</p>

</div>

<div class="small-12 large-6 columns">
<br>

<script>
function solution (id) {
    var element = document.getElementById(id);
    
if (element.style.display === "none") {
        element.style.display = "block";
    } else {
        element.style.display = "none";
    }
}
</script>
    
<p><strong>Exercise 1</strong></p>
<p>What is the expected output of the following code?</p>
<codep>import math

try:
    print(math.sqrt(9))
except ValueError:
    print("inf")
else:
    print("fine")

</codep>
<br>

<button class="button tiny" onclick="solution('sol')">Check</button>

<p id="sol" style="display: none;">
<codep>3.0
fine
</codep></p>


<br><br>

<p><strong>Exercise 2</strong></p>
<p>What is the expected output of the following code?</p>
<codep>import math

try:
    print(math.sqrt(-9))
except ValueError:
    print("inf")
else:
    print("fine")
finally:
    print("the end")

</codep>
<br>


<button class="button tiny" onclick="solution('sol2')">Check</button>
<p id="sol2" style="display: none;"><codep>inf
the end
</codep>
</p>

<br><br>




<p><strong>Exercise 3</strong></p>
<p>What is the expected output of the following code?</p>
<codep>import math

class NewValueError(ValueError):
    def __init__(self, name, color, state):
        self.data = (name, color, state)

try:
    raise NewValueError("Enemy warning", "Red alert", "High readiness")
except NewValueError as nve:
    for arg in nve.args:
        print(arg, end='! ')

</codep>
<br>

<button class="button tiny" onclick="solution('sol3')">Check</button>

<p id="sol3" style="display: none;">
<codep>Enemy warning! Red alert! High readiness! 
</codep>
</p>




<br>


</div>

</div>
</div>


<studyMode>true</studyMode>
<labMode>false</labMode>

</problem>

