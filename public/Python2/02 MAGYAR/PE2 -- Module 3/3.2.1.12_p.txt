<problem chapter='3' section='2' slide='1' problem='12' title='A procedurálistól az objektumorientált megközelítésig'>

<!--
Update history:
2020-09-30 Grzegorz (review, PEP-8 compliance check, update)
-->

<code>
class Stack:
    def __init__(self):
        self.__stack_list = []

    def push(self, val):
        self.__stack_list.append(val)

    def pop(self):
        val = self.__stack_list[-1]
        del self.__stack_list[-1]
        return val


class AddingStack(Stack):
    def __init__(self):
        Stack.__init__(self)
        self.__sum = 0

    def get_sum(self):
        return self.__sum

    def push(self, val):
        self.__sum += val
        Stack.push(self, val)

    def pop(self):
        val = Stack.pop(self)
        self.__sum -= val
        return val


stack_object = AddingStack()

for i in range(5):
    stack_object.push(i)
print(stack_object.get_sum())

for i in range(5):
    print(stack_object.pop())

</code>



<h1>Az objektumos megközelítés: verem létrehozása (folytatás)</h1>

<p>Ez az új <codel>pop</codel> függvény:</p>

<codep class="syntax-color">def pop(self):
    val = Stack.pop(self)
    self.__sum -= val
    return val
</codep>

<br>

<p>Eddig definiáltuk a <codel>__sum</codel> változót, de nem adtunk meg módszert az értékének kinyerésére. Úgy tûnik, hogy rejtve van. Hogyan fedhetjük fel, és hogyan tehetjük ezt úgy, hogy még mindig védve legyen a módosításoktól?</p>

<p>Új metódust kell definiálnunk. A <codel>get_sum</codel> nevet adjuk neki. Egyetlen feladata az lesz, hogy <strong>visszaadja a <codel>__sum</codel> értéket</strong>.</p>

<p>Itt is van:</p>

<codep class="syntax-color">def get_sum(self):
    return self.__sum
</codep>

<br>

<p>Nézzük meg a programot a szerkesztõben. Az osztály teljes kódja ott van. Most már ellenõrizhetjük a mûködését, méghozzá nagyon kevés kiegészítõ kódsor segítségével.</p>

<p>Amint láthatjuk, öt egymást követõ értéket teszünk a verembe, kiírjuk az összegüket, és mindet kivesszük a verembõl.</p>

<p>Nos, ez egy nagyon rövid bevezetés volt a Python objektumprogramozásába. Hamarosan részletesebben fogunk mesélni neked az egészrõl.</p>

<br>

<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>