<problem chapter='3' section='5' slide='1' problem='1' title='OOP alapok: Öröklés'>

<!--
Update history:
2020-10-01 Grzegorz (review, PEP-8 compliance check, update)
-->

<code>class Star:
    def __init__(self, name, galaxy):
        self.name = name
        self.galaxy = galaxy


sun = Star("Sun", "Milky Way")
print(sun)

</code>



<h1>Öröklés - miért és hogyan?</h1>

<p>Mielőtt az öröklésről beszélnénk, szeretnénk bemutatni egy új, praktikus mechanizmust, amelyet a Python osztályai és objektumai használnak - ez az a <strong>mód, ahogyan az objektum be tudja mutatni magát</strong>.</p>

<p>Kezdjük egy példával. Nézzük meg a kódot a szerkesztőben!</p>

<p>A program csak egy sor szöveget ír ki, ami a mi esetünkben ez:</p>

<codep><__main__.Star object at 0x7f1074cc7c50></codep>
<p style="text-align: right;"><font size="-2"><b>kimenet</b></font></p>

<p>Ha ugyanazt a kódot futtatod a számítógépeden, valami nagyon hasonlót fogsz látni, bár a hexadecimális szám (a <font face="Courier New">0x</font>-el kezdődő karakterlánc) más lesz, mivel ez csak egy belső objektumazonosító, amelyet a Python használ, és nem valószínű, hogy ugyanez jelenne meg, ha a kódot más környezetben futtatod.</p>

<p>Mint látod, ez a kimenet nem igazán hasznos, és valami konkrétabb, vagy egyszerűen csak szebb, jobb lenne.</p>

<p>Szerencsére a Python éppen ilyen függvényt kínál.</p>

<br>
<br>

<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
