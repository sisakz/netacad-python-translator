<problem chapter='3' section='2' slide='1' problem='6' title='A procedurálistól az objektumorientált megközelítésig'>

<!--
Update history:
2020-09-30 Grzegorz (review, PEP-8 compliance check, update)
-->

<code>class Stack:
    def __init__(self):
        self.__stack_list = []


stack_object = Stack()
print(len(stack_object.__stack_list))

</code>



<h1>A verem – az objektumos megközelítés (folytatás)</h1>

<p>Nézzük meg - két aláhúzást adtunk a <codel>stack_list</codel> név elé - semmi mást:</p>

<codep>class Stack:
    def __init__(self):
        self.<mark class="mark-background">__</mark>stack_list = []

stack_object = Stack()
print(len(stack_object.<mark class="mark-background">__</mark>stack_list))

</codep>
<br>

 

<p>A módosítás hibássá teszi a programot.</p>

<p>Miért?</p>

 
<p>Ha bármelyik osztálykomponens <strong>neve két aláhúzással kezdődik (<codel>__</codel>), akkor privát lesz</strong> – ez azt jelenti, hogy csak az osztályon belülről érhető el a továbbiakban.</p>

<p>A külvilágból nem lehet látni. A Python így valósítja meg az <strong>egységbezárás (encapsulation)</strong> koncepcióját.</p>

<p>Futtassuk a programot, hogy teszteljük a feltételezéseinket - egy <font face="courier new">AttributeError</font> kivételnek kell megjelennie.</p>



<br>
<br>

<studyMode>false</studyMode>
<labMode>false</labMode>

</problem>
